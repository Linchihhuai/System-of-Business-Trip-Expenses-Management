  method SOUS_TRAJETSET_CREATE_ENTITY.

    DATA lt_sous_trajet TYPE STANDARD TABLE OF zhr_sous_trajet.
    DATA wa_sous_trajet LIKE LINE OF lt_sous_trajet.

    DATA return TYPE STANDARD TABLE OF bapireturn1.
    DATA ls_return LIKE LINE OF return.

     DATA eventID TYPE i.
        call function 'QF05_RANDOM_INTEGER'
          exporting
            RAN_INT_MAX   = 99999999              " Greatest required value
            RAN_INT_MIN   = 1                " Smallest required value
          importing
            RAN_INT       =  eventID                " Random number
*          exceptions
*            INVALID_INPUT = 1                " RAN_INT_MIN > RAN_INT_MAX
*            OTHERS        = 2
    .
    io_data_provider->read_entry_data( IMPORTING es_data = er_entity ).

     wa_sous_trajet-ID = eventID.
     wa_sous_trajet-nom = er_entity-nom.
     wa_sous_trajet-begda = er_entity-begda.
     wa_sous_trajet-endda = er_entity-endda.
     wa_sous_trajet-depart = er_entity-depart.
     wa_sous_trajet-destination = er_entity-destination.
     wa_sous_trajet-distance_prevu = er_entity-distance_prevu.
     wa_sous_trajet-distance_parcouru = er_entity-distance_parcouru.
     wa_sous_trajet-temps_prevu = er_entity-temps_prevu.
     wa_sous_trajet-temps_en_motion = er_entity-temps_en_motion.
     wa_sous_trajet-frais = er_entity-frais.
     wa_sous_trajet-montant_rembourse = er_entity-montant_rembourse.
     wa_sous_trajet-transport = er_entity-transport.
     wa_sous_trajet-etat = er_entity-etat.
     wa_sous_trajet-FK_trajet = er_entity-FK_trajet.
     wa_sous_trajet-FK_routine = er_entity-FK_routine.



     APPEND wa_sous_trajet TO lt_sous_trajet.

     INSERT INTO zhr_sous_trajet VALUES wa_sous_trajet.
*
     IF sy-subrc <> 0.
        RAISE EXCEPTION TYPE /IWBEP/CX_MGW_BUSI_EXCEPTION
        EXPORTING textid = /IWBEP/CX_MGW_BUSI_EXCEPTION=>business_error
        message = ls_return-message.
     ENDIF.

  endmethod.
